#!/usr/bin/python
"""
Issue a single command to an HP ILO instance and return the output.

usage: ilocommand --ilo <ilourl> <command string>
"""

import logging
logging.basicConfig(level=logging.WARNING)

import sys, os

from optparse import OptionParser,Option
import urlparse
for scheme in ('ssh',):
    if not scheme in urlparse.uses_netloc:
        urlparse.uses_netloc += [scheme]

    if not scheme in urlparse.uses_query:
        urlparse.uses_query += [scheme]

import ilolib

defaults = {
    "ilourl": None,
    "ilouser": None,
    "ilopass": None
}

for key in defaults:
    value = os.getenv(key.upper())
    if value != None:
        defaults[key] = value

usage = "usage: %prog --ilourl <url> command [args...]"
description = """Issue a single command to an HP ILO 2 service processor via SSH. The ilourl contains the username and password on the commandline. DO NOT USE THIS COMMAND IF YOU ARE CONCERNED WITH THE SECURITY OF YOUR ILOs
"""

all_options = (
    Option("-d", "--debug", action="store_true", default=False),
    Option("-v", "--verbose", action="store_true", default=False),
    Option("-n", "--dryrun", dest="liverun", action="store_false", default=True),
    Option(
        "-i", "--ilourl", 
        default=defaults["ilourl"],
        help="ex. ssh://user:pass@host", 
        )    
)

if __name__ == "__main__":
    logger = logging.getLogger(" ilocommand")

    optparser = OptionParser(usage, option_list=all_options, 
                             description=description)
    (opt, args) = optparser.parse_args()

    if opt.verbose:
        logging.root.setLevel(logging.INFO)
        logger.setLevel(logging.INFO)
        logger.info(" set log level INFO")

    if opt.debug:
        logging.root.setLevel(logging.DEBUG)
        logger.setLevel(logging.DEBUG)
        logger.debug(" set log level DEBUG")

    if opt.ilourl == None:
        # print usage and exit with return 1
        logger.error(" missing required argument: --ilourl")
        optparser.print_help()
        sys.exit(1)

    url = urlparse.urlparse(opt.ilourl)
    
    # if the default username is set and the URL username is NOT
    ilo = ilolib.Ilo(url=opt.ilourl)

    # execute expects a variable list of string arguments
    # so pass in a reference to the args list
    result = ilo.execute(*args)

    print result
    
